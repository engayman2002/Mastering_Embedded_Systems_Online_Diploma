
engay@Ayman MINGW64 /d/M My Working Dir/Mastering_Embedded_Systems_Online_Diploma/Unit3_Embedded_C/Lesson_2/ARM_VersatilePB_Project (main)
$ arm-none-eabi-gcc --help
Usage: arm-none-eabi-gcc.exe [options] file...
Options:
  -pass-exit-codes         Exit with highest error code from a phase
  --help                   Display this information
  --target-help            Display target specific command line options
  --help={common|optimizers|params|target|warnings|[^]{joined|separate|undocumented}}[,...]
                           Display specific types of command line options
  (Use '-v --help' to display command line options of sub-processes)
  --version                Display compiler version information
  -dumpspecs               Display all of the built in spec strings
  -dumpversion             Display the version of the compiler
  -dumpmachine             Display the compiler's target processor
  -print-search-dirs       Display the directories in the compiler's search path
  -print-libgcc-file-name  Display the name of the compiler's companion library
  -print-file-name=<lib>   Display the full path to library <lib>
  -print-prog-name=<prog>  Display the full path to compiler component <prog>
  -print-multi-directory   Display the root directory for versions of libgcc
  -print-multi-lib         Display the mapping between command line options and
                           multiple library search directories
  -print-multi-os-directory Display the relative path to OS libraries
  -print-sysroot           Display the target libraries directory
  -print-sysroot-headers-suffix Display the sysroot suffix used to find headers
  -Wa,<options>            Pass comma-separated <options> on to the assembler
  -Wp,<options>            Pass comma-separated <options> on to the preprocessor
  -Wl,<options>            Pass comma-separated <options> on to the linker
  -Xassembler <arg>        Pass <arg> on to the assembler
  -Xpreprocessor <arg>     Pass <arg> on to the preprocessor
  -Xlinker <arg>           Pass <arg> on to the linker
  -save-temps              Do not delete intermediate files
  -save-temps=<arg>        Do not delete intermediate files
  -no-canonical-prefixes   Do not canonicalize paths when building relative
                           prefixes to other gcc components
  -pipe                    Use pipes rather than intermediate files
  -time                    Time the execution of each subprocess
  -specs=<file>            Override built-in specs with the contents of <file>
  -std=<standard>          Assume that the input sources are for <standard>
  --sysroot=<directory>    Use <directory> as the root directory for headers
                           and libraries
  -B <directory>           Add <directory> to the compiler's search paths
  -v                       Display the programs invoked by the compiler
  -###                     Like -v but options quoted and commands not executed
  -E                       Preprocess only; do not compile, assemble or link
  -S                       Compile only; do not assemble or link
  -c                       Compile and assemble, but do not link
  -o <file>                Place the output into <file>
  -pie                     Create a position independent executable
  -shared                  Create a shared library
  -x <language>            Specify the language of the following input files
                           Permissible languages include: c c++ assembler none
                           'none' means revert to the default behavior of
                           guessing the language based on the file's extension

Options starting with -g, -f, -m, -O, -W, or --param are automatically
 passed on to the various sub-processes invoked by arm-none-eabi-gcc.exe.  In order to pass
 other options on to these processes the -W<letter> options must be used.

For bug reporting instructions, please see:
<http://gcc.gnu.org/bugs.html>.

engay@Ayman MINGW64 /d/M My Working Dir/Mastering_Embedded_Systems_Online_Diploma/Unit3_Embedded_C/Lesson_2/ARM_VersatilePB_Project (main)
$ arm-none-eabi-gcc -c app.c -o app.o
app.c: In function 'main':
app.c:9:2: warning: passing argument 1 of 'Send_String_to_UART0DR' discards 'const' qualifier from pointer target type [enabled by default]
In file included from app.c:1:0:
uart.h:5:13: note: expected 'char *' but argument is of type 'const char *'

engay@Ayman MINGW64 /d/M My Working Dir/Mastering_Embedded_Systems_Online_Diploma/Unit3_Embedded_C/Lesson_2/ARM_VersatilePB_Project (main)
$ arm-none-eabi-gcc -c uart.c -o uart.o

engay@Ayman MINGW64 /d/M My Working Dir/Mastering_Embedded_Systems_Online_Diploma/Unit3_Embedded_C/Lesson_2/ARM_VersatilePB_Project (main)
$ arm-none-eabi-objdump.exe -h app.o >> app_Headers.txt

engay@Ayman MINGW64 /d/M My Working Dir/Mastering_Embedded_Systems_Online_Diploma/Unit3_Embedded_C/Lesson_2/ARM_VersatilePB_Project (main)
$ arm-none-eabi-objdump.exe -h uart.o >> uart_Headers.txt

engay@Ayman MINGW64 /d/M My Working Dir/Mastering_Embedded_Systems_Online_Diploma/Unit3_Embedded_C/Lesson_2/ARM_VersatilePB_Project (main)
$ arm-none-eabi-objdump.exe -d app.o >> app_disassemble.txt

engay@Ayman MINGW64 /d/M My Working Dir/Mastering_Embedded_Systems_Online_Diploma/Unit3_Embedded_C/Lesson_2/ARM_VersatilePB_Project (main)
$ arm-none-eabi-objdump.exe -d uart.o >> uart_disassemble.txt

engay@Ayman MINGW64 /d/M My Working Dir/Mastering_Embedded_Systems_Online_Diploma/Unit3_Embedded_C/Lesson_2/ARM_VersatilePB_Project (main)
$ arm-none-eabi-gcc -c -g uart.c -o uart.o

engay@Ayman MINGW64 /d/M My Working Dir/Mastering_Embedded_Systems_Online_Diploma/Unit3_Embedded_C/Lesson_2/ARM_VersatilePB_Project (main)
$ arm-none-eabi-gcc -c -g app.c -o app.o
app.c: In function 'main':
app.c:9:2: warning: passing argument 1 of 'Send_String_to_UART0DR' discards 'const' qualifier from pointer target type [enabled by default]
In file included from app.c:1:0:
uart.h:5:13: note: expected 'char *' but argument is of type 'const char *'

engay@Ayman MINGW64 /d/M My Working Dir/Mastering_Embedded_Systems_Online_Diploma/Unit3_Embedded_C/Lesson_2/ARM_VersatilePB_Project (main)
$ arm-none-eabi-objdump.exe -h app.o >> app_Headers.txt

engay@Ayman MINGW64 /d/M My Working Dir/Mastering_Embedded_Systems_Online_Diploma/Unit3_Embedded_C/Lesson_2/ARM_VersatilePB_Project (main)
$ arm-none-eabi-gcc -c app.c -o app.o
app.c: In function 'main':
app.c:9:2: warning: passing argument 1 of 'Send_String_to_UART0DR' discards 'const' qualifier from pointer target type [enabled by default]
In file included from app.c:1:0:
uart.h:5:13: note: expected 'char *' but argument is of type 'const char *'

engay@Ayman MINGW64 /d/M My Working Dir/Mastering_Embedded_Systems_Online_Diploma/Unit3_Embedded_C/Lesson_2/ARM_VersatilePB_Project (main)
$ arm-none-eabi-gcc -c uart.c -o uart.o

engay@Ayman MINGW64 /d/M My Working Dir/Mastering_Embedded_Systems_Online_Diploma/Unit3_Embedded_C/Lesson_2/ARM_VersatilePB_Project (main)
$ arm-none-eabi-objdump.exe -h app.o >> app_Headers.txt

engay@Ayman MINGW64 /d/M My Working Dir/Mastering_Embedded_Systems_Online_Diploma/Unit3_Embedded_C/Lesson_2/ARM_VersatilePB_Project (main)
$ arm-none-eabi-objdump.exe -h uart.o >> uart_Headers.txt

engay@Ayman MINGW64 /d/M My Working Dir/Mastering_Embedded_Systems_Online_Diploma/Unit3_Embedded_C/Lesson_2/ARM_VersatilePB_Project (main)
$ arm-none-eabi-objdump.exe -d app.o >> app_disassemble.txt

engay@Ayman MINGW64 /d/M My Working Dir/Mastering_Embedded_Systems_Online_Diploma/Unit3_Embedded_C/Lesson_2/ARM_VersatilePB_Project (main)
$ arm-none-eabi-objdump.exe -d uart.o >> uart_disassemble.txt

engay@Ayman MINGW64 /d/M My Working Dir/Mastering_Embedded_Systems_Online_Diploma/Unit3_Embedded_C/Lesson_2/ARM_VersatilePB_Project (main)
$ arm-none-eabi-objdump.exe -s app.o >> app_FullContentOfAllSections.txt

engay@Ayman MINGW64 /d/M My Working Dir/Mastering_Embedded_Systems_Online_Diploma/Unit3_Embedded_C/Lesson_2/ARM_VersatilePB_Project (main)
$ arm-none-eabi-objdump.exe -s uart.o >> uart_FullContentOfAllSections.txt

engay@Ayman MINGW64 /d/M My Working Dir/Mastering_Embedded_Systems_Online_Diploma/Unit3_Embedded_C/Lesson_2/ARM_VersatilePB_Project (main)
$ arm-none-eabi-as.exe -mcpu=arm926ej-s startup.s -o startup.o

engay@Ayman MINGW64 /d/M My Working Dir/Mastering_Embedded_Systems_Online_Diploma/Unit3_Embedded_C/Lesson_2/ARM_VersatilePB_Project (main)
$ arm-none-eabi-objdump.exe -h startup.o >> startup_Headers.txt

engay@Ayman MINGW64 /d/M My Working Dir/Mastering_Embedded_Systems_Online_Diploma/Unit3_Embedded_C/Lesson_2/ARM_VersatilePB_Project (main)
$ arm-none-eabi-objdump.exe -d startup.o >> startup_disassemble.txt

engay@Ayman MINGW64 /d/M My Working Dir/Mastering_Embedded_Systems_Online_Diploma/Unit3_Embedded_C/Lesson_2/ARM_VersatilePB_Project (main)
$ arm-none-eabi-nm.exe app.o >> app_symbols.txt

engay@Ayman MINGW64 /d/M My Working Dir/Mastering_Embedded_Systems_Online_Diploma/Unit3_Embedded_C/Lesson_2/ARM_VersatilePB_Project (main)
$ arm-none-eabi-nm.exe uart.o >> uart_symbols.txt

engay@Ayman MINGW64 /d/M My Working Dir/Mastering_Embedded_Systems_Online_Diploma/Unit3_Embedded_C/Lesson_2/ARM_VersatilePB_Project (main)
$ arm-none-eabi-nm.exe startup.o >> startup_symbols.txt

engay@Ayman MINGW64 /d/M My Working Dir/Mastering_Embedded_Systems_Online_Diploma/Unit3_Embedded_C/Lesson_2/ARM_VersatilePB_Project (main)
$ arm-none-eabi-ld.
arm-none-eabi-ld.bfd.exe  arm-none-eabi-ld.exe

engay@Ayman MINGW64 /d/M My Working Dir/Mastering_Embedded_Systems_Online_Diploma/Unit3_Embedded_C/Lesson_2/ARM_VersatilePB_Project (main)
$ arm-none-eabi-ld.exe -T linker_script.ld startup.o app.o uart.o -o learn-in-depth-ayman.elf -Map=MyMapFile.map
C:\ARM_TOOLCHAIN\bin\arm-none-eabi-ld.exe:linker_script.ld:10: syntax error

engay@Ayman MINGW64 /d/M My Working Dir/Mastering_Embedded_Systems_Online_Diploma/Unit3_Embedded_C/Lesson_2/ARM_VersatilePB_Proje
$ arm-none-eabi-ld.exe -T linker_script.ld startup.o app.o uart.o -o learn-in-depth-ayman.elf -Map=MyMapFile.map

engay@Ayman MINGW64 /d/M My Working Dir/Mastering_Embedded_Systems_Online_Diploma/Unit3_Embedded_C/Lesson_2/ARM_VersatilePB_Proje
$ arm-none-eabi-nm.exe learn-in-depth-ayman.elf >> learn-in-depth-ayman_Symbols.txt

engay@Ayman MINGW64 /d/M My Working Dir/Mastering_Embedded_Systems_Online_Diploma/Unit3_Embedded_C/Lesson_2/ARM_VersatilePB_Proje
$ arm-none-eabi-objdump.exe -h learn-in-depth-ayman.elf >> learn-in-depth-ayman_Headers.txt

engay@Ayman MINGW64 /d/M My Working Dir/Mastering_Embedded_Systems_Online_Diploma/Unit3_Embedded_C/Lesson_2/ARM_VersatilePB_Proje
$ arm-none-eabi-objdump.exe -d learn-in-depth-ayman.elf >> learn-in-depth-ayman_disassemble.txt

engay@Ayman MINGW64 /d/M My Working Dir/Mastering_Embedded_Systems_Online_Diploma/Unit3_Embedded_C/Lesson_2/ARM_VersatilePB_Proje
$ arm-none-eabi-objcopy.exe -O binary learn-in-depth-ayman.elf learn-in-depth-ayman.bin

engay@Ayman MINGW64 /d/M My Working Dir/Mastering_Embedded_Systems_Online_Diploma/Unit3_Embedded_C/Lesson_2/ARM_VersatilePB_Proje
$ arm-none-eabi-readelf.exe -a learn-in-depth-ayman.elf >> learn-in-depth-ayman_READELF.txt

engay@Ayman MINGW64 /d/M My Working Dir/Mastering_Embedded_Systems_Online_Diploma/Unit3_Embedded_C/Lesson_2/ARM_VersatilePB_Proje
$ qemu-system-arm -M versatilepb -m 128M -nographic -kernel learn-in-depth-ayman.bin
Learn-In-Depth: < Ayman Mohamed Elashry >
Thanks

engay@Ayman MINGW64 /d/M My Working Dir/Mastering_Embedded_Systems_Online_Diploma/Unit3_Embedded_C/Lesson_2/ARM_VersatilePB_Project (main)
$
